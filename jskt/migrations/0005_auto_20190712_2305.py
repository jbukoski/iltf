# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2019-07-12 23:05
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('jskt', '0004_auto_20190712_2212'),
    ]

    operations = [
        migrations.CreateModel(
            name='clco_parcels',
            fields=[
                ('pnum', models.CharField(max_length=12)),
                ('prop_id', models.BigIntegerField()),
                ('acres_gis', models.FloatField()),
                ('situs_addr', models.CharField(max_length=15)),
                ('situs_dir', models.CharField(max_length=1)),
                ('situs_rd', models.CharField(max_length=50)),
                ('situs_ext', models.CharField(max_length=10)),
                ('situs_city', models.CharField(max_length=30)),
                ('zip_code', models.CharField(max_length=5)),
                ('pacs_link', models.CharField(max_length=127)),
                ('pmt_link', models.CharField(max_length=127)),
                ('tribal', models.CharField(max_length=10)),
                ('ownership', models.CharField(max_length=30)),
                ('jskt_statu', models.CharField(max_length=25)),
                ('prev_owner', models.CharField(max_length=25)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='jefco_parcels',
            fields=[
                ('pin', models.BigIntegerField()),
                ('pin_string', models.CharField(max_length=80)),
                ('prop_id', models.BigIntegerField()),
                ('township', models.CharField(max_length=80)),
                ('range', models.CharField(max_length=80)),
                ('section_field', models.CharField(max_length=80)),
                ('qtr_sectio', models.CharField(max_length=80)),
                ('situs_addr', models.CharField(max_length=80)),
                ('situs_city', models.CharField(max_length=80)),
                ('situs_zip', models.CharField(max_length=80)),
                ('owner', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=20)),
                ('prev_own', models.CharField(max_length=40)),
                ('acres', models.FloatField()),
                ('tribal', models.CharField(max_length=10)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='jst_boundary_clco',
            fields=[
                ('pnum', models.CharField(max_length=12)),
                ('prop_id', models.BigIntegerField()),
                ('acres_gis', models.FloatField()),
                ('situs_addr', models.CharField(max_length=15)),
                ('situs_dir', models.CharField(max_length=1)),
                ('situs_rd', models.CharField(max_length=50)),
                ('situs_ext', models.CharField(max_length=10)),
                ('situs_city', models.CharField(max_length=30)),
                ('zip_code', models.CharField(max_length=5)),
                ('pacs_link', models.CharField(max_length=127)),
                ('pmt_link', models.CharField(max_length=127)),
                ('tribal', models.CharField(max_length=10)),
                ('ownership', models.CharField(max_length=30)),
                ('jskt_statu', models.CharField(max_length=25)),
                ('prev_owner', models.CharField(max_length=25)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='jst_boundary_jefco',
            fields=[
                ('pin', models.BigIntegerField()),
                ('pin_string', models.CharField(max_length=80)),
                ('prop_id', models.BigIntegerField()),
                ('township', models.CharField(max_length=80)),
                ('range', models.CharField(max_length=80)),
                ('section_field', models.CharField(max_length=80)),
                ('qtr_sectio', models.CharField(max_length=80)),
                ('situs_addr', models.CharField(max_length=80)),
                ('situs_city', models.CharField(max_length=80)),
                ('situs_zip', models.CharField(max_length=80)),
                ('owner', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=20)),
                ('prev_own', models.CharField(max_length=40)),
                ('acres', models.FloatField()),
                ('tribal', models.CharField(max_length=10)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='jst_fee_parcels_clco',
            fields=[
                ('pnum', models.CharField(max_length=12)),
                ('prop_id', models.BigIntegerField()),
                ('acres_gis', models.FloatField()),
                ('situs_addr', models.CharField(max_length=15)),
                ('situs_dir', models.CharField(max_length=1)),
                ('situs_rd', models.CharField(max_length=50)),
                ('situs_ext', models.CharField(max_length=10)),
                ('situs_city', models.CharField(max_length=30)),
                ('zip_code', models.CharField(max_length=5)),
                ('pacs_link', models.CharField(max_length=127)),
                ('pmt_link', models.CharField(max_length=127)),
                ('tribal', models.CharField(max_length=10)),
                ('ownership', models.CharField(max_length=30)),
                ('jskt_statu', models.CharField(max_length=25)),
                ('prev_owner', models.CharField(max_length=25)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='jst_reservation_parcels_clco',
            fields=[
                ('pnum', models.CharField(max_length=12)),
                ('prop_id', models.BigIntegerField()),
                ('acres_gis', models.FloatField()),
                ('situs_addr', models.CharField(max_length=15)),
                ('situs_dir', models.CharField(max_length=1)),
                ('situs_rd', models.CharField(max_length=50)),
                ('situs_ext', models.CharField(max_length=10)),
                ('situs_city', models.CharField(max_length=30)),
                ('zip_code', models.CharField(max_length=5)),
                ('pacs_link', models.CharField(max_length=127)),
                ('pmt_link', models.CharField(max_length=127)),
                ('tribal', models.CharField(max_length=10)),
                ('ownership', models.CharField(max_length=30)),
                ('jskt_statu', models.CharField(max_length=25)),
                ('prev_owner', models.CharField(max_length=25)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='jst_trust_parcels_clco',
            fields=[
                ('pnum', models.CharField(max_length=12)),
                ('prop_id', models.BigIntegerField()),
                ('acres_gis', models.FloatField()),
                ('situs_addr', models.CharField(max_length=15)),
                ('situs_dir', models.CharField(max_length=1)),
                ('situs_rd', models.CharField(max_length=50)),
                ('situs_ext', models.CharField(max_length=10)),
                ('situs_city', models.CharField(max_length=30)),
                ('zip_code', models.CharField(max_length=5)),
                ('pacs_link', models.CharField(max_length=127)),
                ('pmt_link', models.CharField(max_length=127)),
                ('tribal', models.CharField(max_length=10)),
                ('ownership', models.CharField(max_length=30)),
                ('jskt_statu', models.CharField(max_length=25)),
                ('prev_owner', models.CharField(max_length=25)),
                ('shape_leng', models.FloatField()),
                ('shape_area', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.RenameModel(
            old_name='land_consolidation',
            new_name='jst_land_consol_area',
        ),
        migrations.DeleteModel(
            name='all_prop',
        ),
        migrations.DeleteModel(
            name='cl_co_prop_db',
        ),
        migrations.DeleteModel(
            name='counties',
        ),
        migrations.DeleteModel(
            name='fee_trust',
        ),
        migrations.DeleteModel(
            name='jef_co_prop_db',
        ),
        migrations.DeleteModel(
            name='prop_only',
        ),
        migrations.DeleteModel(
            name='res_trust',
        ),
        migrations.DeleteModel(
            name='service_area',
        ),
    ]
